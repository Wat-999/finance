#通过函数与库，可以避免很多重复及复杂的工作。所谓函数，就是把具有独立功能的代码组织为一个小模块，在需要的时候可以反复调用。
#函数分为编译器自带的函数(内建函数)和用户自己创建的函数(用户自定义函数);内建函数是编译器开发者已经定义好的函数，用户可以直接使用，如print()函数
#自定义函数是用户按照需求自己编制并定义的函数。当各种函数很多的时候，开发者会把函数分组，分别放到不同的文件里，这样每个文件包含的代码就相对较少而且
#可以是同一类函数，这个文件就称为库(也叫模块),总之，函数和库的作用就是将一些常用的代码封装好，用户需要实现相应功能时就不必重复写代码，而是直接调用即可。

#函数的定义与调用
#自定义韩式的格式如下，用def来定义一个函数，注意冒号及缩进。
#def 函数名(参数):
#    代码

#用一元一次函数y=x+1来演示下python函数的写法：
def y(x):
    print(x+1)
y(1)
#第一行和第二行代码定义了一个函数y(x)，第三行代码调用y(x)函数，其中将1赋值给y(x)函数的参数x
#调用函数很简单，只要输入函数名，如函数名y，如果函数含有参数，如函数y(x)中的x，那么在函数名后面的括号中输入相关参数即可。函数参数只是一个代号

#定义函数也可以传入两个参数，以数学中的二元函数y(x,z)=x+z+1为例
def y(x,z):
    print(x+z+1)
y(1, 2)

#定义函数时也可以不要参数
def y():
    x = 1
    print(x+1)
y()  #调用函数

#函数的返回值与作用域
#返回值：函数的返回值用得相对较少
def y(x):
    return(x+1)
y(1)
#运行会发现没有任何输出结果，这是因为return语句和print()函数不同。通俗地说，return类似看不见的print()函数，它把原来该有print()函数
#输出的值赋值给了y(x)函数，更严谨的说法就是该函数的返回值为x+1。稍稍修改代码就可以把y(x)的值显现出来，代码如下：
def y(x):
    return(x+1)
a = y(1)
print(a)  #y(1)已经是一个有数值的内容了，只是不能直接看到，将其赋值给变量a，便可以利用print()函数将其打印出来
#在实际应用中，return后面一般不加括号，例如上面的代码一般直接写成return x+1
#在此可能会有疑惑：有了print()为什么还用return？这是因为print()函数仅仅是将函数执行结果打印在控制台，之后就无法再使用了，
#而return则是将return后面的部分作为函数的输出结果，即函数的返回值，之后可以赋值给别的变量，继续使用该返回值做其他事

#变量的作用域
#在函数内使用的变量和函数外的代码是没有关系的，演示代码如下
x = 1
def y(x):
    x = x + 1
    print(x)
y(3)
print(x)   #同样是print(x),为什么打印出来的内容不一样了，这是因为函数y(x)里面的x和外面的x没有关系
#正如前面所说，函数的形式参数只是个代号，属于函数内的局部变量，因此不会影响函数外部的变量

#常用基本函数介绍
#str()函数用于将数字转换成字符串，在进行字符串拼接的时候经常用到，演示代码如下：
score = 85
print('A公司今日评分为' + str(score) + '分。')
#int()函数用于将字符串转换成数字
a = '85'
b = int(a) - 10   #通过int()函数转换后才能进行数值计算
print(b)

#len()函数可以用于统计列表元素个数
title = ['标题1', '标题2', '标题3']
print(len(title))

#len()函数在实战中常和range()函数一起使用
title = ['标题1', '标题2', '标题3']
for i in range(len(title)):
    print(str(i+1) + '.' +title[i])
#range(len(title))表示range(3),所以这里for循环语句中的i表示的是0、1、2、这3个整数，因此在生成标题序号时要写成i+1
#并通过上面提到的str()函数转换成字符串，在进行字符串拼接

#len()函数还可以统计字符串的长度
a = '123华小智abcd'
print(a)  #输出结果为10，即10个字符

#replace()函数：主要用于替换指定内容，一般格式为：字符串.replace(旧内容，新内容)
a = '<em>阿里巴巴</em>电商脱贫成"教材"'
a = a.replace('<em>', '')
a = a.replace('</em>', '')
print(a)

#strip()函数：主要的作用是删除空白字符(包括换行符"\n"和空格字符"")，一般格式为：字符串.strip()
a = '         华能信托公司2018年'
a = a.strip()
print(a)

#split()函数：主要作用是分割字符串，最后生成的结果为一个列表，一般格式为：字符串.split('分割符')
today = '2019-04-12'
a = today.split('-')
print(a)
#如果想调用分割得到的年份信息或月份信息，可以通过如下代码实现：
a = today.split('-')[0]   #获取年份信息，即分割完得到的第一个元素
a = today.split('-')[1]   #获取月份信息，即分割完得到的第而个元素

#库也称为模块，是python这些年发展如此迅猛的一个原因，因为很多优秀的IT工程师在研发出非常棒的代码之后，
#愿意把它共享给大家使用，而存储这些共享代码的地方就称为库。有的库是python是带的，有的库则需要自己安装。库的引用方法如下
#import 库名
#from 库名 import 库里的一个功能
import time
print(time.strftime("%Y-%m-%d"))  #输出当天时间
#从datetime库里引用datetime功能也能实现同样的效果,前一个datatime是库名，后一个datetime可以理解成功能，然后使用datetime功能的now()函数获取时间
from datetime import datetime
print(datetime.now())
#也可以写成如下
import datetime
print(datetime.datetime.now())
